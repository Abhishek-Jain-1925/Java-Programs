import java.sql.*;

public class BloodDonorApp {
    static final String DB_URL = "jdbc:mysql://localhost:3306/blood_donors";
    static final String USER = "root";
    static final String PASS = "password";
    static final String TABLE_NAME = "donor";

    static Connection conn = null;
    static Statement stmt = null;

    public static void main(String[] args) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();

            int choice;
            do {
                System.out.println("\nBlood Donor Application");
                System.out.println("1. Insert blood donor details");
                System.out.println("2. Display blood group-wise details of donors");
                System.out.println("3. Update the address of a specific donor");
                System.out.println("4. Delete the record of donors below 18 years of age");
                System.out.println("5. Exit");
                System.out.print("Enter your choice: ");
                choice = Integer.parseInt(System.console().readLine());

                switch (choice) {
                    case 1:
                        insertDonorDetails();
                        break;
                    case 2:
                        displayDonorsByBloodGroup();
                        break;
                    case 3:
                        updateDonorAddress();
                        break;
                    case 4:
                        deleteDonorsBelowAge(18);
                        break;
                    case 5:
                        System.out.println("Exiting...");
                        break;
                    default:
                        System.out.println("Invalid choice!");
                }
            } while (choice != 5);

            stmt.close();
            conn.close();
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }

    public static void insertDonorDetails() {
        try {
            System.out.println("\nInserting donor details...");
            System.out.print("Enter donor name: ");
            String name = System.console().readLine();
            System.out.print("Enter donor blood group: ");
            String bloodGroup = System.console().readLine();
            System.out.print("Enter donor age: ");
            int age = Integer.parseInt(System.console().readLine());
            System.out.print("Enter donor address: ");
            String address = System.console().readLine();

            String sql = "INSERT INTO " + TABLE_NAME + " (name, blood_group, age, address) VALUES " +
                    "('" + name + "', '" + bloodGroup + "', " + age + ", '" + address + "')";
            stmt.executeUpdate(sql);
            System.out.println("Donor details inserted successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void displayDonorsByBloodGroup() {
        try {
            System.out.println("\nDisplaying donors by blood group...");
            String sql = "SELECT * FROM " + TABLE_NAME + " ORDER BY blood_group";
            ResultSet rs = stmt.executeQuery(sql);
            String currentBloodGroup = "";
            while (rs.next()) {
                String name = rs.getString("name");
                String bloodGroup = rs.getString("blood_group");
                int age = rs.getInt("age");
                String address = rs.getString("address");
                if (!currentBloodGroup.equals(bloodGroup)) {
                    currentBloodGroup = bloodGroup;
                    System.out.println("\nBlood group: " + bloodGroup);
                }
                System.out.println("Name: " + name + ", Age: " + age + ", Address: " + address);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

        public static void updateDonorAddress() {
        try {
            System.out.println("\nUpdating donor address...");
            System.out.print("Enter donor name: ");
            String name = System.console().readLine();
            System.out.print("Enter new address: ");
            String newAddress = System.console().readLine();

            String sql = "UPDATE " + TABLE_NAME + " SET address='" + newAddress + "' WHERE name='" + name + "'";
            int rowsUpdated = stmt.executeUpdate(sql);
            if (rowsUpdated == 0) {
                System.out.println("No donor found with that name.");
            } else {
                System.out.println("Address updated for " + rowsUpdated + " donor(s).");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void deleteDonorsBelowAge(int age) {
        try {
            System.out.println("\nDeleting donors below age " + age + "...");
            String sql = "DELETE FROM " + TABLE_NAME + " WHERE age < " + age;
            int rowsDeleted = stmt.executeUpdate(sql);
            System.out.println("Deleted " + rowsDeleted + " donor(s) below age " + age + ".");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}